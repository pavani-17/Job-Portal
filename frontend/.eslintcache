[{"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/App.js":"1","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/index.js":"2","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/reportWebVitals.js":"3","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/MainComponent.js":"4","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/RegisterComponent.js":"5","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/LoginComponent.js":"6","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/CreateJob.js":"7","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserDashboard.js":"8","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserApplications.js":"9","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserProfile.js":"10"},{"size":203,"mtime":1610802916892,"results":"11","hashOfConfig":"12"},{"size":548,"mtime":1610733091790,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610704286868,"results":"14","hashOfConfig":"12"},{"size":2138,"mtime":1610991862161,"results":"15","hashOfConfig":"12"},{"size":11282,"mtime":1610824241428,"results":"16","hashOfConfig":"12"},{"size":3631,"mtime":1610819400815,"results":"17","hashOfConfig":"12"},{"size":7052,"mtime":1610896151336,"results":"18","hashOfConfig":"12"},{"size":11794,"mtime":1610994374965,"results":"19","hashOfConfig":"12"},{"size":5746,"mtime":1610981664063,"results":"20","hashOfConfig":"12"},{"size":10451,"mtime":1610995963110,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1uwwgne",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/App.js",[],["46","47"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/index.js",[],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/reportWebVitals.js",[],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/MainComponent.js",["48","49"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/RegisterComponent.js",["50","51","52","53","54"],"import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row } from 'reactstrap';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\n\nexport default class Register extends Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            firstname: '',\n            lastname: '',\n            type: 'Select Type',\n            email:'',\n            password: '',\n            phone: '',\n            bio: '',\n            education: [{education_name:'', education_start:'', education_end:''}],\n            num_ed: 1,\n            skills: [''],\n            num_skill:1,\n            skills_initial : ['C', 'C++', 'Javascript', 'Python']\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.newPostForm = this.newPostForm.bind(this);\n        this.handleEdChange = this.handleEdChange.bind(this);\n        this.incrementEducation = this.incrementEducation.bind(this);\n        this.decrementEducation = this.decrementEducation.bind(this);\n        this.handleSkillChange = this.handleSkillChange.bind(this);\n        this.incrementSkill = this.incrementSkill.bind(this);\n        this.decrementSkill = this.decrementSkill.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event)\n    {\n        event.preventDefault();\n        if(this.state.type===\"Applicant\")\n        {\n            axios({\n                method: \"POST\",\n                url: \"http://localhost:3000/signup/applicant\",\n                data: this.state,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            }).then((response) => {\n                console.log(response);\n            }).catch((err) => console.log(err));\n        }\n        else if(this.state.type===\"Recruiter\")\n        {\n            axios({\n                method: \"POST\",\n                url: \"http://localhost:3000/signup/recruiter\",\n                data: this.state,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            }).then((response) => {\n                console.log(response);\n            }).catch((err) => console.log(err));\n        }\n        \n    }\n\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name] : value\n        });\n    };\n\n    handleEdChange(event) {\n        const target = event.target;\n        const value = target.value;\n        var name = target.name;\n        var i = name[0];\n        var temp = this.state.education;\n        name = name.slice(1);\n        temp[i][name] = value;\n        console.log(temp);\n        this.setState({\n            education: temp\n        })\n    }\n\n    handleSkillChange(event) {\n        const target = event.target;\n        const value = target.value;\n        var name = target.name;\n        var temp = this.state.skills;\n        temp[name] = value;\n        this.setState({\n            skills: temp\n        })\n    }\n    \n    incrementEducation(event)\n    {\n        var t_num = this.state.num_ed+1;\n        var temp = this.state.education;\n        temp.push({education_name:'', education_start:'', education_end:''});\n        this.setState({\n            education: temp,\n            num_ed: t_num\n        });\n    }\n\n    incrementSkill(event)\n    {\n        var t_num = this.state.num_skill+1;\n        var temp = this.state.skills;\n        temp.push('');\n        this.setState({\n            skills: temp,\n            num_skill: t_num\n        });\n    }\n    \n    decrementEducation(event)\n    {\n        if(this.state.num_ed === 0)\n        {\n            return;\n        }\n        var t_num = this.state.num_ed-1;\n        var temp = this.state.education;\n        temp.pop();\n        this.setState({\n            education: temp,\n            num_ed: t_num\n        })\n    }\n    decrementSkill(event)\n    {\n        if(this.state.num_skill === 0)\n        {\n            return;\n        }\n        var t_num = this.state.num_skill - 1;\n        var temp = this.state.skills;\n        temp.pop();\n        this.setState({\n            skills: temp,\n            num_skill: t_num\n        });\n    }\n\n    newPostForm = (val) => {\n        if(val === \"Applicant\")\n        {\n            const skills = this.state.skills_initial;\n            let skills_list = skills.length > 0 && skills.map((item, i) => {\n                return(\n                    <option key={i} value={item}>{item}</option>\n                )\n            }, this);\n            let ed_list = [];\n            let i;\n            for (i=0;i<this.state.num_ed;i++)\n            {\n                let name_temp = i +\"education_name\";\n                let start_temp = i +\"education_start\";\n                let end_temp = i +\"education_end\";\n                ed_list.push(\n                        <FormGroup row>\n                            <Label htmlFor=\"education\" md={2}></Label>\n                            <Col md={10}>\n                                <Input type=\"text\" id={name_temp} name={name_temp} placeholder=\"School/College\" value={this.state.education[i].education_name} onChange={this.handleEdChange}/>\n                                <Input type=\"number\" id={start_temp} name={start_temp} value={this.state.education[i].education_start} onChange={this.handleEdChange}/>\n                                <Input type=\"number\" id={end_temp} name={end_temp} value={this.state.education[i].education_end} onChange={this.handleEdChange}/>\n                            </Col>\n                        </FormGroup>\n                        );\n            }\n            let ski_list =[];\n            for(i=0;i<this.state.num_skill;i++)\n            {\n                ski_list.push(\n                    <FormGroup row>\n                        <Label htmlFor=\"skills\" md={2}></Label>\n                        <Col md={3}>\n                            <Input type=\"select\" id={i} name={i} value={this.state.skills[i]} onChange={this.handleSkillChange}>{skills_list}</Input>\n                        </Col>\n                    </FormGroup>\n                );\n            }\n            let val = (\n                <div>\n                    <FormGroup row>\n                        <Label htmlFor=\"education\" md={2}>Education</Label>\n                    </FormGroup>\n                    {ed_list}\n                </div>\n            );\n            var button1 = <Button Col md={{size:3, offset:3}} onClick={this.incrementEducation}>Add one more education</Button>\n            var button2 = <Button Col md={{size:3, offset:3}} onClick={this.decrementEducation}>Remove one education</Button>\n            var button3 = <Button Col md={{size:3, offset:3}} onClick={this.incrementSkill}>Add one more skill field</Button>\n            var button4 = <Button Col md={{size:3, offset:3}} onClick={this.decrementSkill}>Remove one skill field</Button>\n            return(\n                <div className=\"applicant_form\">\n                   {val}\n                   <FormGroup row>\n                       {button1} {button2}\n                   </FormGroup>\n                   <Label htmlFor=\"skills\" md={2}>Skills</Label>\n\n                    {ski_list}\n                    <FormGroup row>\n                       {button3} {button4}\n                   </FormGroup>\n                   <FormGroup row>\n                        <Label htmlFor=\"profilePic\" md={2}>Profile Picture</Label>\n                        <Col md={10}>\n                            <Input type=\"file\"/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"resume\" md={2}>Resume</Label>\n                        <Col md={10}>\n                            <Input type=\"file\"/>\n                        </Col>\n                    </FormGroup>\n                </div>\n            );\n        }\n        else if(val === \"Recruiter\")\n        {\n            return(\n                <div className=\"recruiter_form\">\n                    <FormGroup row>\n                        <Label htmlFor=\"phone\" md={2}>Contact Number</Label>\n                        <Col md={10}>\n                            <Input type=\"tel\" id=\"phone\" name=\"phone\" placeholder=\"Contact Number\" onChange={this.handleChange} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"bio\" md={2}>Your Bio</Label>\n                        <Col md={10}>\n                            <Input type=\"textarea\" id=\"bio\" name=\"bio\" rows=\"6\" onChange={this.handleChange} ></Input>\n                        </Col>\n                    </FormGroup>\n                </div>\n            );\n        }\n        else\n        {\n            return null\n        }\n    }\n    \n    render() {\n        let val = this.state.type;\n        let temp_form = this.newPostForm(val);\n        return(\n            <div className=\"container\">\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"someone@example.com\" onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"password\" md={2}>Password</Label>\n                        <Col md={10}>\n                            <Input type=\"password\" id=\"password\" name=\"password\" onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"type\" md={2}>Type of User</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"type\" value={this.state.type} onChange={this.handleChange}>\n                                <option selected disabled> Select Type</option> \n                                <option>Applicant</option>\n                                <option>Recruiter</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    {temp_form}\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        <   Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/LoginComponent.js",["55","56","57","58","59"],"import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row } from 'reactstrap';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\n\nexport default class Login extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state ={\n            email: '',\n            password: '',\n            type: 'Select Type'\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event)\n    {\n        event.preventDefault();\n        if(this.state.type===\"Applicant\")\n        {\n            axios({\n                method: \"POST\",\n                url: \"http://localhost:3000/login/applicant\",\n                data: this.state,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            }).then((response) => {\n                if(response.data.success === true)\n                    this.props.attemptLogin(response.data.token, response.data.user_id, this.state.type);\n            }).catch((err) => console.log(err));\n        }\n        else if(this.state.type===\"Recruiter\")\n        {\n            axios({\n                method: \"POST\",\n                url: \"http://localhost:3000/login/recruiter\",\n                data: this.state,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            }).then((response) => {\n                if(response.data.success === true)\n                this.props.attemptLogin(response.data.token, response.data.user_id, this.state.type);\n            }).catch((err) => console.log(err));\n        }\n        \n    }\n\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name] : value\n        });\n    };\n\n    render()\n    {\n        return(\n            <div className=\"container\">\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"type\" md={2}>Type of User</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"type\" value={this.state.type} onChange={this.handleChange}>\n                                <option selected disabled> Select Type</option> \n                                <option>Applicant</option>\n                                <option>Recruiter</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Input type=\"email\" id=\"email\" name=\"email\" value={this.state.email} placeholder=\"someone@example.com\" onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"password\" md={2}>Password</Label>\n                        <Col md={10}>\n                            <Input type=\"password\" id=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        <   Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/CreateJob.js",["60","61","62","63","64","65","66","67","68"],"import React, { Component } from 'react';\nimport {Switch, Route, Redirect, withRouter, BrowserRouter} from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row } from 'reactstrap';\nimport axios from 'axios';\n\nexport default class CreateJob extends Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            job_title: '',\n            job_type: 'Select Type',\n            duration: 'Select Duration',\n            salary: '',\n            deadline: '',\n            max_positions: '',\n            max_applications: '',\n            skills: [''],\n            num_skill: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSkillChange = this.handleSkillChange.bind(this);\n        this.incrementSkill = this.incrementSkill.bind(this);\n        this.decrementSkill = this.decrementSkill.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event)\n    {\n        event.preventDefault();\n        console.log(this.state);\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/jobs/\",\n            data: this.state,\n            headers: {\n                'Content-Type' : 'application/json',\n            }\n        }).then((response) => {\n            console.log(response);\n        }).catch((err) => console.log(err));\n    }\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name] : value\n        });\n    };\n\n    handleSkillChange(event) {\n        const target = event.target;\n        const value = target.value;\n        var name = target.name;\n        var temp = this.state.skills;\n        temp[name] = value;\n        this.setState({\n            skills: temp\n        })\n    };\n\n    incrementSkill(event)\n    {\n        var t_num = this.state.num_skill+1;\n        var temp = this.state.skills;\n        temp.push('');\n        this.setState({\n            skills: temp,\n            num_skill: t_num\n        });\n    }\n\n    decrementSkill(event)\n    {\n        if(this.state.num_skill === 0)\n        {\n            return;\n        }\n        var t_num = this.state.num_skill - 1;\n        var temp = this.state.skills;\n        temp.pop();\n        this.setState({\n            skills: temp,\n            num_skill: t_num\n        });\n    }\n\n    render()\n    {\n        var skil_list = [];\n        var button1 = <Button Col md={{size:3, offset:3}} onClick={this.incrementSkill}>Add one more skill field</Button>\n        var button2 = <Button Col md={{size:3, offset:3}} onClick={this.decrementSkill}>Remove one skill field</Button>\n        var i;\n        for(i=0;i<this.state.num_skill;i++)\n        {\n            skil_list.push(\n                <FormGroup row>\n                <Label htmlFor=\"skills\" md={2}></Label>\n                <Col md={10}>\n                    <Input type=\"text\" id={i} name={i} value={this.state.skills[i]} onChange={this.handleSkillChange}/>\n                </Col>\n            </FormGroup>)\n        }\n        return (\n            <div className=\"container\">\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"job_title\" md={2}>Job Title</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"job_title\" name=\"job_title\" placeholder=\"Job Title\" value={this.state.job_title} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"job_type\" md={2}>Job Type</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"job_type\" id=\"job_type\" value={this.state.job_type} onChange={this.handleChange}>\n                                <option selected disabled> Select Type</option> \n                                <option>Full-Time</option>\n                                <option>Part-Time</option>\n                                <option>Work From Home</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"duration\" md={2}>Duration</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"duration\" id=\"duration\" value={this.state.duration} onChange={this.handleChange}>\n                                <option selected disabled> Select Duration</option> \n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"salary\" md={2}>Salary</Label>\n                        <Col md={10}>\n                            <Input type=\"number\" id=\"salary\" name=\"salary\" value={this.state.salary} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"max_positions\" md={2}>Maximum Number of Positions</Label>\n                        <Col md={10}>\n                            <Input type=\"number\" id=\"max_positions\" name=\"max_positions\" value={this.state.max_positions} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"max_applications\" md={2}>Maximum Number of Applications</Label>\n                        <Col md={10}>\n                            <Input type=\"number\" id=\"max_applications\" name=\"max_applications\" value={this.state.max_applications} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor=\"skills\" md={2}>Skills</Label>\n                        {skil_list}\n                        {button1} {button2}\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"deadline\" md={2}>Deadline</Label>\n                        <Col md={10}>\n                            <Input type=\"datetime-local\" id=\"deadline\" name=\"deadline\" value={this.state.deadline} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        <   Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserDashboard.js",["69","70","71","72","73","74","75","76","77"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserApplications.js",["78","79","80","81","82","83","84","85","86","87"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserProfile.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":24,"nodeType":"111","messageId":"112","endLine":2,"endColumn":32},{"ruleId":"109","severity":1,"message":"113","line":2,"column":34,"nodeType":"111","messageId":"112","endLine":2,"endColumn":44},{"ruleId":"109","severity":1,"message":"114","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":2,"column":22,"nodeType":"111","messageId":"112","endLine":2,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":2,"column":82,"nodeType":"111","messageId":"112","endLine":2,"endColumn":94},{"ruleId":"109","severity":1,"message":"117","line":2,"column":95,"nodeType":"111","messageId":"112","endLine":2,"endColumn":98},{"ruleId":"109","severity":1,"message":"118","line":3,"column":9,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"114","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":2,"column":22,"nodeType":"111","messageId":"112","endLine":2,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":2,"column":82,"nodeType":"111","messageId":"112","endLine":2,"endColumn":94},{"ruleId":"109","severity":1,"message":"117","line":2,"column":95,"nodeType":"111","messageId":"112","endLine":2,"endColumn":98},{"ruleId":"109","severity":1,"message":"118","line":3,"column":9,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"119","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":15},{"ruleId":"109","severity":1,"message":"120","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":2,"column":24,"nodeType":"111","messageId":"112","endLine":2,"endColumn":32},{"ruleId":"109","severity":1,"message":"113","line":2,"column":34,"nodeType":"111","messageId":"112","endLine":2,"endColumn":44},{"ruleId":"109","severity":1,"message":"121","line":2,"column":46,"nodeType":"111","messageId":"112","endLine":2,"endColumn":59},{"ruleId":"109","severity":1,"message":"114","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":3,"column":22,"nodeType":"111","messageId":"112","endLine":3,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":3,"column":82,"nodeType":"111","messageId":"112","endLine":3,"endColumn":94},{"ruleId":"109","severity":1,"message":"117","line":3,"column":95,"nodeType":"111","messageId":"112","endLine":3,"endColumn":98},{"ruleId":"109","severity":1,"message":"119","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":15},{"ruleId":"109","severity":1,"message":"120","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":2,"column":24,"nodeType":"111","messageId":"112","endLine":2,"endColumn":32},{"ruleId":"109","severity":1,"message":"113","line":2,"column":34,"nodeType":"111","messageId":"112","endLine":2,"endColumn":44},{"ruleId":"109","severity":1,"message":"121","line":2,"column":46,"nodeType":"111","messageId":"112","endLine":2,"endColumn":59},{"ruleId":"109","severity":1,"message":"114","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":4,"column":22,"nodeType":"111","messageId":"112","endLine":4,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":4,"column":82,"nodeType":"111","messageId":"112","endLine":4,"endColumn":94},{"ruleId":"109","severity":1,"message":"122","line":4,"column":117,"nodeType":"111","messageId":"112","endLine":4,"endColumn":129},{"ruleId":"109","severity":1,"message":"119","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":15},{"ruleId":"109","severity":1,"message":"120","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":2,"column":24,"nodeType":"111","messageId":"112","endLine":2,"endColumn":32},{"ruleId":"109","severity":1,"message":"113","line":2,"column":34,"nodeType":"111","messageId":"112","endLine":2,"endColumn":44},{"ruleId":"109","severity":1,"message":"121","line":2,"column":46,"nodeType":"111","messageId":"112","endLine":2,"endColumn":59},{"ruleId":"109","severity":1,"message":"114","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":4,"column":22,"nodeType":"111","messageId":"112","endLine":4,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":4,"column":82,"nodeType":"111","messageId":"112","endLine":4,"endColumn":94},{"ruleId":"109","severity":1,"message":"122","line":4,"column":117,"nodeType":"111","messageId":"112","endLine":4,"endColumn":129},{"ruleId":"109","severity":1,"message":"123","line":4,"column":172,"nodeType":"111","messageId":"112","endLine":4,"endColumn":182},{"ruleId":"109","severity":1,"message":"119","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":15},{"ruleId":"109","severity":1,"message":"120","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":2,"column":24,"nodeType":"111","messageId":"112","endLine":2,"endColumn":32},{"ruleId":"109","severity":1,"message":"113","line":2,"column":34,"nodeType":"111","messageId":"112","endLine":2,"endColumn":44},{"ruleId":"109","severity":1,"message":"121","line":2,"column":46,"nodeType":"111","messageId":"112","endLine":2,"endColumn":59},{"ruleId":"109","severity":1,"message":"114","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":20},{"ruleId":"109","severity":1,"message":"115","line":4,"column":22,"nodeType":"111","messageId":"112","endLine":4,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":4,"column":82,"nodeType":"111","messageId":"112","endLine":4,"endColumn":94},{"ruleId":"109","severity":1,"message":"117","line":4,"column":95,"nodeType":"111","messageId":"112","endLine":4,"endColumn":98},{"ruleId":"109","severity":1,"message":"124","line":4,"column":100,"nodeType":"111","messageId":"112","endLine":4,"endColumn":104},{"ruleId":"109","severity":1,"message":"125","line":4,"column":106,"nodeType":"111","messageId":"112","endLine":4,"endColumn":115},{"ruleId":"109","severity":1,"message":"122","line":4,"column":117,"nodeType":"111","messageId":"112","endLine":4,"endColumn":129},{"ruleId":"109","severity":1,"message":"126","line":4,"column":131,"nodeType":"111","messageId":"112","endLine":4,"endColumn":139},{"ruleId":"109","severity":1,"message":"127","line":4,"column":141,"nodeType":"111","messageId":"112","endLine":4,"endColumn":146},{"ruleId":"109","severity":1,"message":"128","line":4,"column":148,"nodeType":"111","messageId":"112","endLine":4,"endColumn":159},{"ruleId":"109","severity":1,"message":"129","line":4,"column":161,"nodeType":"111","messageId":"112","endLine":4,"endColumn":170},{"ruleId":"109","severity":1,"message":"123","line":4,"column":172,"nodeType":"111","messageId":"112","endLine":4,"endColumn":182},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'FormFeedback' is defined but never used.","'Row' is defined but never used.","'useForm' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","'CardSubtitle' is defined but never used.","'NavbarText' is defined but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","no-global-assign","no-unsafe-negation"]