[{"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/App.js":"1","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/index.js":"2","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/reportWebVitals.js":"3","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/MainComponent.js":"4","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/RegisterComponent.js":"5","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/LoginComponent.js":"6","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/CreateJob.js":"7","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserDashboard.js":"8","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserApplications.js":"9","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserProfile.js":"10","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/RecruiterProfile.js":"11","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/RecruiterDashboard.js":"12","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/viewApplicants.js":"13","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/viewEmployees.js":"14"},{"size":203,"mtime":1610802916892,"results":"15","hashOfConfig":"16"},{"size":548,"mtime":1610733091790,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610704286868,"results":"18","hashOfConfig":"16"},{"size":2856,"mtime":1611150890012,"results":"19","hashOfConfig":"16"},{"size":11364,"mtime":1611003034709,"results":"20","hashOfConfig":"16"},{"size":3631,"mtime":1610819400815,"results":"21","hashOfConfig":"16"},{"size":7052,"mtime":1610896151336,"results":"22","hashOfConfig":"16"},{"size":11884,"mtime":1611079040021,"results":"23","hashOfConfig":"16"},{"size":5738,"mtime":1611155137972,"results":"24","hashOfConfig":"16"},{"size":10451,"mtime":1611002193752,"results":"25","hashOfConfig":"16"},{"size":5130,"mtime":1611004201525,"results":"26","hashOfConfig":"16"},{"size":6588,"mtime":1611140871928,"results":"27","hashOfConfig":"16"},{"size":6047,"mtime":1611158365774,"results":"28","hashOfConfig":"16"},{"size":7741,"mtime":1611159729352,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1uwwgne",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/App.js",[],["65","66"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/index.js",[],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/reportWebVitals.js",[],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/MainComponent.js",["67","68"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/RegisterComponent.js",["69","70","71","72","73"],"import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row } from 'reactstrap';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\n\nexport default class Register extends Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            firstname: '',\n            lastname: '',\n            type: 'Select Type',\n            email:'',\n            password: '',\n            phone: '',\n            bio: '',\n            education: [{education_name:'', education_start:'', education_end:''}],\n            num_ed: 1,\n            skills: [''],\n            num_skill:1,\n            skills_initial : ['C', 'C++', 'Javascript', 'Python']\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.newPostForm = this.newPostForm.bind(this);\n        this.handleEdChange = this.handleEdChange.bind(this);\n        this.incrementEducation = this.incrementEducation.bind(this);\n        this.decrementEducation = this.decrementEducation.bind(this);\n        this.handleSkillChange = this.handleSkillChange.bind(this);\n        this.incrementSkill = this.incrementSkill.bind(this);\n        this.decrementSkill = this.decrementSkill.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event)\n    {\n        event.preventDefault();\n        if(this.state.type===\"Applicant\")\n        {\n            axios({\n                method: \"POST\",\n                url: \"http://localhost:3000/signup/applicant\",\n                data: this.state,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            }).then((response) => {\n                console.log(response);\n            }).catch((err) => console.log(err));\n        }\n        else if(this.state.type===\"Recruiter\")\n        {\n            axios({\n                method: \"POST\",\n                url: \"http://localhost:3000/signup/recruiter\",\n                data: this.state,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            }).then((response) => {\n                console.log(response);\n            }).catch((err) => console.log(err));\n        }\n        \n    }\n\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name] : value\n        });\n    };\n\n    handleEdChange(event) {\n        const target = event.target;\n        const value = target.value;\n        var name = target.name;\n        var i = name[0];\n        var temp = this.state.education;\n        name = name.slice(1);\n        temp[i][name] = value;\n        console.log(temp);\n        this.setState({\n            education: temp\n        })\n    }\n\n    handleSkillChange(event) {\n        const target = event.target;\n        const value = target.value;\n        var name = target.name;\n        var temp = this.state.skills;\n        temp[name] = value;\n        this.setState({\n            skills: temp\n        })\n    }\n    \n    incrementEducation(event)\n    {\n        var t_num = this.state.num_ed+1;\n        var temp = this.state.education;\n        temp.push({education_name:'', education_start:'', education_end:''});\n        this.setState({\n            education: temp,\n            num_ed: t_num\n        });\n    }\n\n    incrementSkill(event)\n    {\n        var t_num = this.state.num_skill+1;\n        var temp = this.state.skills;\n        temp.push('');\n        this.setState({\n            skills: temp,\n            num_skill: t_num\n        });\n    }\n    \n    decrementEducation(event)\n    {\n        if(this.state.num_ed === 0)\n        {\n            return;\n        }\n        var t_num = this.state.num_ed-1;\n        var temp = this.state.education;\n        temp.pop();\n        this.setState({\n            education: temp,\n            num_ed: t_num\n        })\n    }\n    decrementSkill(event)\n    {\n        if(this.state.num_skill === 0)\n        {\n            return;\n        }\n        var t_num = this.state.num_skill - 1;\n        var temp = this.state.skills;\n        temp.pop();\n        this.setState({\n            skills: temp,\n            num_skill: t_num\n        });\n    }\n\n    newPostForm = (val) => {\n        if(val === \"Applicant\")\n        {\n            const skills = this.state.skills_initial;\n            let skills_list = skills.length > 0 && skills.map((item, i) => {\n                return(\n                    <option key={i} value={item}>{item}</option>\n                )\n            }, this);\n            let ed_list = [];\n            let i;\n            for (i=0;i<this.state.num_ed;i++)\n            {\n                let name_temp = i +\"education_name\";\n                let start_temp = i +\"education_start\";\n                let end_temp = i +\"education_end\";\n                ed_list.push(\n                        <FormGroup row>\n                            <Label htmlFor=\"education\" md={2}></Label>\n                            <Col md={10}>\n                                <Input type=\"text\" id={name_temp} name={name_temp} placeholder=\"School/College\" value={this.state.education[i].education_name} onChange={this.handleEdChange}/>\n                                <Input type=\"number\" id={start_temp} name={start_temp} value={this.state.education[i].education_start} onChange={this.handleEdChange}/>\n                                <Input type=\"number\" id={end_temp} name={end_temp} value={this.state.education[i].education_end} onChange={this.handleEdChange}/>\n                            </Col>\n                        </FormGroup>\n                        );\n            }\n            let ski_list =[];\n            for(i=0;i<this.state.num_skill;i++)\n            {\n                ski_list.push(\n                    <FormGroup row>\n                        <Label htmlFor=\"skills\" md={2}></Label>\n                        <Col md={3}>\n                            <Input type=\"select\" id={i} name={i} value={this.state.skills[i]} onChange={this.handleSkillChange}>{skills_list}</Input>\n                        </Col>\n                    </FormGroup>\n                );\n            }\n            let val = (\n                <div>\n                    <FormGroup row>\n                        <Label htmlFor=\"education\" md={2}>Education</Label>\n                    </FormGroup>\n                    {ed_list}\n                </div>\n            );\n            var button1 = <Button Col md={{size:3, offset:3}} onClick={this.incrementEducation}>Add one more education</Button>\n            var button2 = <Button Col md={{size:3, offset:3}} onClick={this.decrementEducation}>Remove one education</Button>\n            var button3 = <Button Col md={{size:3, offset:3}} onClick={this.incrementSkill}>Add one more skill field</Button>\n            var button4 = <Button Col md={{size:3, offset:3}} onClick={this.decrementSkill}>Remove one skill field</Button>\n            return(\n                <div className=\"applicant_form\">\n                   {val}\n                   <FormGroup row>\n                       {button1} {button2}\n                   </FormGroup>\n                   <Label htmlFor=\"skills\" md={2}>Skills</Label>\n\n                    {ski_list}\n                    <FormGroup row>\n                       {button3} {button4}\n                   </FormGroup>\n                   <FormGroup row>\n                        <Label htmlFor=\"profilePic\" md={2}>Profile Picture</Label>\n                        <Col md={10}>\n                            <Input type=\"file\"/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"resume\" md={2}>Resume</Label>\n                        <Col md={10}>\n                            <Input type=\"file\"/>\n                        </Col>\n                    </FormGroup>\n                </div>\n            );\n        }\n        else if(val === \"Recruiter\")\n        {\n            return(\n                <div className=\"recruiter_form\">\n                    <FormGroup row>\n                        <Label htmlFor=\"phone\" md={2}>Contact Number</Label>\n                        <Col md={10}>\n                            <Input type=\"tel\" id=\"phone\" name=\"phone\" placeholder=\"Contact Number\" onChange={this.handleChange} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"bio\" md={2}>Your Bio</Label>\n                        <Col md={10}>\n                            <Input type=\"textarea\" id=\"bio\" name=\"bio\" rows=\"6\" onChange={this.handleChange} ></Input>\n                        </Col>\n                    </FormGroup>\n                </div>\n            );\n        }\n        else\n        {\n            return null\n        }\n    }\n    \n    render() {\n        let val = this.state.type;\n        let temp_form = this.newPostForm(val);\n        return(\n            <div className=\"container\">\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" onChange={this.handleChange} value={this.state.firstname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" onChange={this.handleChange} value={this.state.lastname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"someone@example.com\" onChange={this.handleChange} value={this.state.email}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"password\" md={2}>Password</Label>\n                        <Col md={10}>\n                            <Input type=\"password\" id=\"password\" name=\"password\" onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"type\" md={2}>Type of User</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"type\" value={this.state.type} onChange={this.handleChange}>\n                                <option selected disabled> Select Type</option> \n                                <option>Applicant</option>\n                                <option>Recruiter</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    {temp_form}\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        <   Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/LoginComponent.js",["74","75","76","77","78"],"import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row } from 'reactstrap';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\n\nexport default class Login extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state ={\n            email: '',\n            password: '',\n            type: 'Select Type'\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event)\n    {\n        event.preventDefault();\n        if(this.state.type===\"Applicant\")\n        {\n            axios({\n                method: \"POST\",\n                url: \"http://localhost:3000/login/applicant\",\n                data: this.state,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            }).then((response) => {\n                if(response.data.success === true)\n                    this.props.attemptLogin(response.data.token, response.data.user_id, this.state.type);\n            }).catch((err) => console.log(err));\n        }\n        else if(this.state.type===\"Recruiter\")\n        {\n            axios({\n                method: \"POST\",\n                url: \"http://localhost:3000/login/recruiter\",\n                data: this.state,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            }).then((response) => {\n                if(response.data.success === true)\n                this.props.attemptLogin(response.data.token, response.data.user_id, this.state.type);\n            }).catch((err) => console.log(err));\n        }\n        \n    }\n\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name] : value\n        });\n    };\n\n    render()\n    {\n        return(\n            <div className=\"container\">\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"type\" md={2}>Type of User</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"type\" value={this.state.type} onChange={this.handleChange}>\n                                <option selected disabled> Select Type</option> \n                                <option>Applicant</option>\n                                <option>Recruiter</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Input type=\"email\" id=\"email\" name=\"email\" value={this.state.email} placeholder=\"someone@example.com\" onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"password\" md={2}>Password</Label>\n                        <Col md={10}>\n                            <Input type=\"password\" id=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        <   Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/CreateJob.js",["79","80","81","82","83","84","85","86","87"],"import React, { Component } from 'react';\nimport {Switch, Route, Redirect, withRouter, BrowserRouter} from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row } from 'reactstrap';\nimport axios from 'axios';\n\nexport default class CreateJob extends Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            job_title: '',\n            job_type: 'Select Type',\n            duration: 'Select Duration',\n            salary: '',\n            deadline: '',\n            max_positions: '',\n            max_applications: '',\n            skills: [''],\n            num_skill: 1\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSkillChange = this.handleSkillChange.bind(this);\n        this.incrementSkill = this.incrementSkill.bind(this);\n        this.decrementSkill = this.decrementSkill.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event)\n    {\n        event.preventDefault();\n        console.log(this.state);\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/jobs/\",\n            data: this.state,\n            headers: {\n                'Content-Type' : 'application/json',\n            }\n        }).then((response) => {\n            console.log(response);\n        }).catch((err) => console.log(err));\n    }\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name] : value\n        });\n    };\n\n    handleSkillChange(event) {\n        const target = event.target;\n        const value = target.value;\n        var name = target.name;\n        var temp = this.state.skills;\n        temp[name] = value;\n        this.setState({\n            skills: temp\n        })\n    };\n\n    incrementSkill(event)\n    {\n        var t_num = this.state.num_skill+1;\n        var temp = this.state.skills;\n        temp.push('');\n        this.setState({\n            skills: temp,\n            num_skill: t_num\n        });\n    }\n\n    decrementSkill(event)\n    {\n        if(this.state.num_skill === 0)\n        {\n            return;\n        }\n        var t_num = this.state.num_skill - 1;\n        var temp = this.state.skills;\n        temp.pop();\n        this.setState({\n            skills: temp,\n            num_skill: t_num\n        });\n    }\n\n    render()\n    {\n        var skil_list = [];\n        var button1 = <Button Col md={{size:3, offset:3}} onClick={this.incrementSkill}>Add one more skill field</Button>\n        var button2 = <Button Col md={{size:3, offset:3}} onClick={this.decrementSkill}>Remove one skill field</Button>\n        var i;\n        for(i=0;i<this.state.num_skill;i++)\n        {\n            skil_list.push(\n                <FormGroup row>\n                <Label htmlFor=\"skills\" md={2}></Label>\n                <Col md={10}>\n                    <Input type=\"text\" id={i} name={i} value={this.state.skills[i]} onChange={this.handleSkillChange}/>\n                </Col>\n            </FormGroup>)\n        }\n        return (\n            <div className=\"container\">\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"job_title\" md={2}>Job Title</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"job_title\" name=\"job_title\" placeholder=\"Job Title\" value={this.state.job_title} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"job_type\" md={2}>Job Type</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"job_type\" id=\"job_type\" value={this.state.job_type} onChange={this.handleChange}>\n                                <option selected disabled> Select Type</option> \n                                <option>Full-Time</option>\n                                <option>Part-Time</option>\n                                <option>Work From Home</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"duration\" md={2}>Duration</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"duration\" id=\"duration\" value={this.state.duration} onChange={this.handleChange}>\n                                <option selected disabled> Select Duration</option> \n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"salary\" md={2}>Salary</Label>\n                        <Col md={10}>\n                            <Input type=\"number\" id=\"salary\" name=\"salary\" value={this.state.salary} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"max_positions\" md={2}>Maximum Number of Positions</Label>\n                        <Col md={10}>\n                            <Input type=\"number\" id=\"max_positions\" name=\"max_positions\" value={this.state.max_positions} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"max_applications\" md={2}>Maximum Number of Applications</Label>\n                        <Col md={10}>\n                            <Input type=\"number\" id=\"max_applications\" name=\"max_applications\" value={this.state.max_applications} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor=\"skills\" md={2}>Skills</Label>\n                        {skil_list}\n                        {button1} {button2}\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"deadline\" md={2}>Deadline</Label>\n                        <Col md={10}>\n                            <Input type=\"datetime-local\" id=\"deadline\" name=\"deadline\" value={this.state.deadline} onChange={this.handleChange}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        <   Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserDashboard.js",["88","89","90","91","92","93","94","95","96"],"import React, { Component } from 'react';\nimport {Switch, Route, Redirect, withRouter, BrowserRouter} from 'react-router-dom';\nimport axios from 'axios';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row, Card, CardTitle, CardSubtitle, CardText, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\n\nexport default class UserDashboard extends Component {\n    constructor()\n    {\n        super();\n        this.state = {\n            jobs: '',\n            applications: '',\n            displayed_arr: '',\n            sortsalary: 0,\n            sortduration:0,\n            sortrating:0,\n            job_type: 'Select Type',\n            begin_sal:null,\n            end_sal:null,\n            duration:'Select Duration',\n            isModalOpen: false,\n            job_id:'',\n            sop:'',\n        }\n        this.sort = this.sort.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.filter_val = this.filter_val.bind(this);\n        this.updatearr = this.updatearr.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.executeStuff = this.executeStuff.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n    }\n\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n            [name] : value\n        });\n    };\n\n    handleClear(event)\n    {\n        var temp = this.state.jobs;\n        this.setState({\n            begin_sal: null,\n            end_sal: null,\n            duration: 'Select Duration',\n            job_type: 'Select Type',\n            displayed_arr: temp\n        });\n    }\n    handleSubmit(event)\n    {\n        var temp={};\n        temp.job_id = this.state.job_id;\n        temp.sop = this.state.sop;\n        temp.status = \"Applied\";\n        axios({\n            method: \"POST\",\n            url: \"http://localhost:3000/applications/\",\n            data: temp,\n            headers: {\n                'Content-Type' : 'application/json',\n            }\n        })\n        .then((response) =>  {\n            console.log(response);\n            this.executeStuff();\n            this.toggleModal();\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    toggleModal(event)\n    {\n        if(this.state.isModalOpen === false)\n        {\n            var temp = event.target.id;\n            console.log(temp);\n            this.setState({\n                isModalOpen: true,\n                job_id: temp\n            });\n        }\n        else\n        {\n            this.setState({\n                isModalOpen: false,\n                job_id: '',\n                sop:''\n            });\n        }\n    }\n\n    sort(event)\n    {\n        var temp = this.state.displayed_arr;\n        var name = event.target.name;\n        var id = event.target.id;\n        var t = this.state[name];\n        temp.sort(function(a, b) {\n            if(a[id]!==undefined && b[id]!==undefined)\n                return (1-2*t)*(a[id] - b[id]);\n            else\n                return 1;\n        })\n        this.setState({\n            displayed_arr: temp,\n            [name]: !t\n        });\n    }\n\n    filter_val(event)\n    {\n        var temp = this.state.displayed_arr;\n        if(this.state.job_type !== 'Select Type')\n        {\n            var check = this.state.job_type;\n            temp = temp.filter(function(job){\n                return job.job_type === check;\n            }\n            );\n        }\n        if(this.state.begin_sal !== null && this.state.end_sal!== null)\n        {\n            var begin = this.state.begin_sal;\n            var end = this.state.end_sal;\n            temp = temp.filter(function(job){\n                return job.salary >= begin && job.salary <= end\n            });\n        }\n\n        if(this.state.duration !== 'Select Duration')\n        {\n            check = this.state.duration;\n            temp = temp.filter(function(job){\n                return job.duration < check;\n            });\n        }\n\n        this.setState({\n            displayed_arr: temp\n        })\n    }\n\n    updatearr()\n    {\n        let jobtemp = Array.from(this.state.jobs);\n        let applications = Array.from(this.state.applications);\n        applications = applications.map((appl) => {\n            return appl.job_id._id;\n        });\n        jobtemp = jobtemp.map((job) => {\n            var boolVar = applications.includes(job._id);\n            if(boolVar=== true)\n            {\n                job.state = \"Applied\";\n                return job;\n            }\n            else\n            {\n                if(job.rem_applications === 0 || job.rem_positions === 0)\n                {\n                    console.log(\"I am here\")\n                    job.state = \"Full\";\n                    return job;\n                }\n                else\n                {\n                    job.state = \"Apply\";\n                    return job;\n                }\n            }\n        });\n        this.setState({\n            jobs: jobtemp,\n            displayed_arr: jobtemp,\n        });\n    }\n\n    executeStuff()\n    {\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/jobs/\",\n            data: null,\n            headers: {\n                'Content-Type' : 'application/json',\n            }\n        }).then((response) => {\n            this.setState({\n                jobs : response.data\n            });\n            axios({\n                method: \"GET\",\n                url : \"http://localhost:3000/applications/applicant\",\n                data: null,\n                headers: {\n                    'Content-Type' : 'application/json',\n                }\n            })\n            .then((response) => {\n                console.log(response.data);\n                this.setState({\n                    applications: response.data,\n                }, function(){\n                    this.updatearr()}\n                    );\n            })\n            .catch((err) => console.log(err));\n        }).catch((err) => console.log(err));\n    }\n    componentDidMount()\n    {\n        this.executeStuff();\n    }\n    render()\n    {\n        let jobtemp = Array.from(this.state.displayed_arr);\n        let data = jobtemp.map((job) => {\n            var button;\n            if(job.state === \"Apply\")\n            {\n                button = <Button id={job._id} onClick={this.toggleModal}>{job.state}</Button>\n            }\n            else\n            {\n                button = <Button id={job._id}>{job.state}</Button>\n            }\n                return(\n                    <Row>\n                    <Col>\n                    <Card body>\n                      <CardTitle tag=\"h5\">{job.job_title}</CardTitle>\n                      <CardText>Id : {job._id}</CardText>\n                      <CardText>Skills : {job.skills}</CardText>\n                      <CardText>Deadline : {job.deadline}</CardText>\n                      <CardText>Duration: {job.duration}</CardText>\n                      <CardText>Salary: {job.salary}</CardText>\n                      <CardText>Remaining Applications : {job.rem_applications}</CardText>\n                      <CardText>Remaining Positions : {job.rem_positions}</CardText>\n                      <CardText>Type of Job : {job.job_type}</CardText>\n                      <CardText>{job.user_id.firstname} {job.user_id.lastname}</CardText>\n                      <CardText>{job.user_id.email}</CardText>\n                      <CardText>{job.rating}</CardText>\n                      {button}\n                    </Card>\n                  </Col>\n                  </Row>\n                )\n            });\n        return(\n            <div className=\"container\">\n                {data}\n                <FormGroup row>\n                <Col md={{size:6, offset:3}}> <Button row name=\"sortsalary\" id=\"salary\" onClick={this.sort}>Sort By Salary</Button></Col>\n                </FormGroup>\n                <FormGroup row>\n                <Col md={{size:6, offset:3}}> <Button row name=\"sortduration\" id=\"duration\" onClick={this.sort}>Sort By Duration</Button></Col>\n                </FormGroup>\n                <FormGroup row>\n                <Col md={{size:6, offset:3}}> <Button row name=\"sortrating\" id=\"rating\" onClick={this.sort}>Sort By Rating</Button></Col>\n                </FormGroup>\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"job_type\" md={2}>Job Type</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"job_type\" id=\"job_type\" value={this.state.job_type} onChange={this.handleChange}>\n                                <option selected disabled> Select Type</option> \n                                <option>Full-Time</option>\n                                <option>Part-Time</option>\n                                <option>Work From Home</option>\n                            </Input>\n                        </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label htmlFor=\"salary\" md={2}>Salary</Label>\n                            <Col md={{size:3, offset:2}}>\n                                <Input type=\"number\" name=\"begin_sal\"value={this.state.begin_sal} onChange={this.handleChange}></Input>\n                                <Input type=\"number\" name=\"end_sal\"value={this.state.end_sal} onChange={this.handleChange}></Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                        <Label htmlFor=\"duration\" md={2}>Duration</Label>\n                        <Col md={3}>\n                            <Input type=\"select\" name=\"duration\" id=\"duration\" value={this.state.duration} onChange={this.handleChange}>\n                                <option selected disabled> Select Duration</option> \n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n                                <option>7</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n                        <FormGroup row >\n                            <Col md={{size:6, offset:3}}>\n                        <Button name=\"filter_type\" onClick={this.filter_val}> Apply</Button>\n                        </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                        <Col md={{size:6, offset:3}}>\n                        <Button onClick={this.handleClear}>Clear</Button>\n                        </Col>\n                        </FormGroup>\n                </Form>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\n                    <ModalHeader toggle={this.toggleModal}>Apply</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                        <FormGroup row>\n                        <Label htmlFor=\"sop\" md={2}>SOP</Label>\n                        <Col md={10}>\n                            <Input type=\"textarea\" id=\"sop\" name=\"sop\" rows=\"6\" onChange={this.handleChange} value={this.state.sop} ></Input>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        <   Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserApplications.js",["97","98","99","100","101","102","103","104","105","106"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/UserProfile.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { Component } from 'react';\nimport {Switch, Route, Redirect, withRouter, BrowserRouter} from 'react-router-dom';\nimport axios from 'axios';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row, Card, CardTitle, CardSubtitle, CardText, Modal, ModalHeader, ModalBody, NavbarText } from 'reactstrap';\n\nexport default class UserProfile extends Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            firstname: '',\n            lastname: '',\n            email:'',\n            education: '',\n            num_ed: null,\n            skills: '',\n            num_skill:null,\n            edit: false,\n            skills_initial : ['C', 'C++', 'Javascript', 'Python']\n        }\n        this.handleEdit = this.handleEdit.bind(this);\n        this.incrementSkill = this.incrementSkill.bind(this);\n        this.incrementEducation = this.incrementEducation.bind(this);\n        this.decrementEducation = this.decrementEducation.bind(this);\n        this.decrementSkill = this.decrementSkill.bind(this);\n        this.executeStuff = this.executeStuff.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleEdChange = this.handleEdChange.bind(this);\n        this.handleSkillChange = this.handleSkillChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleEdit()\n    {\n        this.setState({\n            edit:true\n        });\n    }\n\n    handleClear()\n    {\n        this.executeStuff();\n    }\n\n    handleSubmit(event)\n    {\n        if(this.state.edit === false)\n            return;\n        var data = this.state;\n        axios({\n            method: \"PUT\",\n            url: \"http://localhost:3000/applicants\",\n            data: data,\n            headers: {\n                'Content-Type' : 'application/json',\n            }\n        }).then((response) => {\n            console.log(response);\n        }).catch((err) => console.log(err));\n        this.executeStuff();\n    }\n\n    handleChange(event)\n    {\n        if(this.state.edit === true)\n        {\n            const target = event.target;\n            const value = target.value;\n            const name = target.name;\n            this.setState({\n                [name] : value\n            });\n        }\n    };\n\n    handleEdChange(event) {\n        const target = event.target;\n        const value = target.value;\n        var name = target.name;\n        var i = name[0];\n        var temp = this.state.education;\n        name = name.slice(1);\n        temp[i][name] = value;\n        console.log(temp);\n        this.setState({\n            education: temp\n        })\n    }\n\n    handleSkillChange(event) {\n        const target = event.target;\n        const value = target.value;\n        var name = target.name;\n        var temp = this.state.skills;\n        temp[name] = value;\n        this.setState({\n            skills: temp\n        })\n    }\n\n    incrementSkill(event)\n    {\n        if(this.state.edit === true)\n        {\n            var t_num = this.state.num_skill+1;\n            var temp = this.state.skills;\n            temp.push('');\n            this.setState({\n                skills: temp,\n                num_skill: t_num\n            });\n        }\n    }\n\n    incrementEducation(event)\n    {\n        if(this.state.edit === true)\n        {\n            var t_num = this.state.num_ed+1;\n            var temp = this.state.education;\n            temp.push({education_name:'', education_start:'', education_end:''});\n            this.setState({\n                education: temp,\n                num_ed: t_num\n            });\n        }\n    }\n\n    decrementEducation(event)\n    {\n        if(this.state.edit === true)\n        {\n            if(this.state.num_ed === 0)\n            {\n                return;\n            }\n            var t_num = this.state.num_ed-1;\n            var temp = this.state.education;\n            temp.pop();\n            this.setState({\n                education: temp,\n                num_ed: t_num\n            })\n        }\n    }\n\n    decrementSkill(event)\n    {\n        if(this.state.edit === true)\n        {\n            if(this.state.num_skill === 0)\n            {\n                return;\n            }\n            var t_num = this.state.num_skill - 1;\n            var temp = this.state.skills;\n            temp.pop();\n            this.setState({\n                skills: temp,\n                num_skill: t_num\n            });\n        }\n    }\n\n    executeStuff()\n    {\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/applicants\",\n            data: null,\n            headers: {\n                'Content-Type' : 'application/json',\n            }\n        })\n        .then((response) => {\n            console.log(response);\n            var data = response.data;\n            var temp = data;\n            var temp1 = temp.education;\n            temp1 = Array.from(temp1);\n            console.log(temp1)\n            var temp2 = temp.skills;\n            temp2 = Array.from(temp2);\n            this.setState({\n                firstname : data.firstname,\n                lastname: data.lastname,\n                email: data.email,\n                education: temp1,\n                num_ed: temp1.length,\n                skills: temp2,\n                num_skill: temp2.length,\n                edit: false\n            });\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    componentDidMount()\n    {\n        this.executeStuff();\n    }\n\n    render()\n    {\n        let skills = this.state.skills_initial;\n        let skills_list = skills.length > 0 && skills.map((item, i) => {\n            return(\n                <option key={i} value={item}>{item}</option>\n            )\n        }, this);\n        var temp_list = [];\n        var i;\n        for(i=0;i<this.state.num_ed;i++)\n        {\n            let name_temp = i +\"education_name\";\n            let start_temp = i +\"education_start\";\n            let end_temp = i +\"education_end\";\n            temp_list.push(\n                <FormGroup row>\n                    <Label htmlFor=\"education\" md={2}></Label>\n                    <Col md={10}>\n                        <Input type=\"text\" id={name_temp} name={name_temp} placeholder=\"School/College\" value={this.state.education[i].education_name} onChange={this.handleEdChange}/>\n                        <Input type=\"number\" id={start_temp} name={start_temp} value={this.state.education[i].education_start} onChange={this.handleEdChange}/>\n                        <Input type=\"number\" id={end_temp} name={end_temp} value={this.state.education[i].education_end} onChange={this.handleEdChange}/>\n                    </Col>\n                </FormGroup>\n            );\n        }\n        var ski_list = [];\n        for(i=0;i<this.state.num_skill;i++)\n        {\n            ski_list.push(\n                <FormGroup row>\n                    <Label htmlFor=\"skills\" md={2}></Label>\n                    <Col md={3}>\n                        <Input type=\"select\" id={i} name={i} value={this.state.skills[i]} onChange={this.handleSkillChange}>{skills_list}</Input>\n                    </Col>\n                </FormGroup>\n            );\n        }\n        let val = (\n            <div>\n                <FormGroup row>\n                    <Label htmlFor=\"education\" md={2}>Education</Label>\n                </FormGroup>\n                {temp_list}\n            </div>\n        );\n        var button1 = <Button Col md={{size:3, offset:3}} onClick={this.incrementEducation}>Add one more education</Button>\n        var button2 = <Button Col md={{size:3, offset:3}} onClick={this.decrementEducation}>Remove one education</Button>\n        var button3 = <Button Col md={{size:3, offset:3}} onClick={this.incrementSkill}>Add one more skill field</Button>\n        var button4 = <Button Col md={{size:3, offset:3}} onClick={this.decrementSkill}>Remove one skill field</Button>\n        return(\n            <div className=\"container\">\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" onChange={this.handleChange} value={this.state.firstname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" onChange={this.handleChange} value={this.state.lastname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"someone@example.com\" onChange={this.handleChange} value={this.state.email}/>\n                        </Col>\n                    </FormGroup>\n                    {val}\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        {button1}\n                        </Col>\n                        <Col md={{size:3, offset:3}}>\n                        {button2}\n                        </Col>\n                    </FormGroup>\n                    {ski_list}\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        {button3}\n                        </Col>\n                        <Col md={{size:3, offset:3}}>\n                        {button4}\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        < Button  onClick={this.handleEdit}>Edit</Button>\n                        </Col>\n                        <Col md={{size:3, offset:3}}>\n                        < Button  onClick={this.handleClear}>Clear</Button>\n                        </Col>\n                        <Col md={{size:3, offset:3}}>\n                        < Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n    \n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/RecruiterProfile.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { Component } from 'react';\nimport {Switch, Route, Redirect, withRouter, BrowserRouter} from 'react-router-dom';\nimport axios from 'axios';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row, Card, CardTitle, CardSubtitle, CardText, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nexport default class Recruitment extends Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            firstname: '',\n            lastname: '',\n            email:'',\n            phone:'',\n            bio:'',\n            edit: false\n        }\n        this.executeStuff = this.executeStuff.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    executeStuff()\n    {\n        axios({\n            method: \"GET\",\n            url: \"http://localhost:3000/recruiters\",\n            data: null,\n            headers: {\n                'Content-Type' : 'application/json',\n            }\n        })\n        .then((response) => {\n            console.log(response.data);\n            this.setState({\n                firstname: response.data.firstname,\n                lastname: response.data.lastname,\n                email: response.data.email,\n                phone: response.data.phone,\n                bio: response.data.bio,\n                edit: false\n            })\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    handleChange(event)\n    {\n        if(this.state.edit === true)\n        {\n            const target = event.target;\n            const value = target.value;\n            const name = target.name;\n            this.setState({\n                [name] : value\n            });\n        }\n    };\n\n    handleEdit()\n    {\n        this.setState({\n            edit:true\n        });\n    }\n\n    handleClear()\n    {\n       this.executeStuff();\n    }\n\n    handleSubmit(event)\n    {\n        if(this.state.edit === false)\n            return;\n        var data = this.state;\n        axios({\n            method: \"PUT\",\n            url: \"http://localhost:3000/recruiters\",\n            data: data,\n            headers: {\n                'Content-Type' : 'application/json',\n            }\n        }).then((response) => {\n            console.log(response);\n        }).catch((err) => console.log(err));\n        this.executeStuff();\n    }\n\n    componentDidMount()\n    {\n        this.executeStuff();\n    }\n\n    render()\n    {\n        return(\n            <div className=\"container\">\n                <Form>\n                    <FormGroup row>\n                        <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" onChange={this.handleChange} value={this.state.firstname}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                        <Col md={10}>\n                            <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" onChange={this.handleChange} value={this.state.lastname}/>\n                        </Col>\n                    </FormGroup>\n                     <FormGroup row>\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"someone@example.com\" onChange={this.handleChange} value={this.state.email}/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"phone\" md={2}>Contact Number</Label>\n                        <Col md={10}>\n                            <Input type=\"tel\" id=\"phone\" name=\"phone\" placeholder=\"Contact Number\" onChange={this.handleChange} value={this.state.phone} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label htmlFor=\"bio\" md={2}>Your Bio</Label>\n                        <Col md={10}>\n                            <Input type=\"textarea\" id=\"bio\" name=\"bio\" rows=\"6\" onChange={this.handleChange} value={this.state.bio} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col md={{size:3, offset:3}}>\n                        < Button  onClick={this.handleEdit}>Edit</Button>\n                        </Col>\n                        <Col md={{size:3, offset:3}}>\n                        < Button  onClick={this.handleClear}>Clear</Button>\n                        </Col>\n                        <Col md={{size:3, offset:3}}>\n                        < Button  onClick={this.handleSubmit}>Submit</Button>\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        )\n    }\n}","/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/RecruiterDashboard.js",["140","141","142","143","144","145","146","147","148"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/viewApplicants.js",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"/home/pavani/Desktop/DASS/Job_Portal/frontend/src/components/viewEmployees.js",["165","166","167","168","169","170","171","172","173","174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"185","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":2,"column":22,"nodeType":"182","messageId":"183","endLine":2,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":2,"column":82,"nodeType":"182","messageId":"183","endLine":2,"endColumn":94},{"ruleId":"180","severity":1,"message":"188","line":2,"column":95,"nodeType":"182","messageId":"183","endLine":2,"endColumn":98},{"ruleId":"180","severity":1,"message":"189","line":3,"column":9,"nodeType":"182","messageId":"183","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"185","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":2,"column":22,"nodeType":"182","messageId":"183","endLine":2,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":2,"column":82,"nodeType":"182","messageId":"183","endLine":2,"endColumn":94},{"ruleId":"180","severity":1,"message":"188","line":2,"column":95,"nodeType":"182","messageId":"183","endLine":2,"endColumn":98},{"ruleId":"180","severity":1,"message":"189","line":3,"column":9,"nodeType":"182","messageId":"183","endLine":3,"endColumn":16},{"ruleId":"180","severity":1,"message":"190","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"191","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":2,"column":46,"nodeType":"182","messageId":"183","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":3,"column":22,"nodeType":"182","messageId":"183","endLine":3,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":3,"column":82,"nodeType":"182","messageId":"183","endLine":3,"endColumn":94},{"ruleId":"180","severity":1,"message":"188","line":3,"column":95,"nodeType":"182","messageId":"183","endLine":3,"endColumn":98},{"ruleId":"180","severity":1,"message":"190","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"191","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":2,"column":46,"nodeType":"182","messageId":"183","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":4,"column":82,"nodeType":"182","messageId":"183","endLine":4,"endColumn":94},{"ruleId":"180","severity":1,"message":"193","line":4,"column":117,"nodeType":"182","messageId":"183","endLine":4,"endColumn":129},{"ruleId":"180","severity":1,"message":"190","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"191","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":2,"column":46,"nodeType":"182","messageId":"183","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":4,"column":82,"nodeType":"182","messageId":"183","endLine":4,"endColumn":94},{"ruleId":"180","severity":1,"message":"193","line":4,"column":117,"nodeType":"182","messageId":"183","endLine":4,"endColumn":129},{"ruleId":"180","severity":1,"message":"194","line":4,"column":172,"nodeType":"182","messageId":"183","endLine":4,"endColumn":182},{"ruleId":"180","severity":1,"message":"190","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"191","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":2,"column":46,"nodeType":"182","messageId":"183","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":4,"column":82,"nodeType":"182","messageId":"183","endLine":4,"endColumn":94},{"ruleId":"180","severity":1,"message":"188","line":4,"column":95,"nodeType":"182","messageId":"183","endLine":4,"endColumn":98},{"ruleId":"180","severity":1,"message":"195","line":4,"column":100,"nodeType":"182","messageId":"183","endLine":4,"endColumn":104},{"ruleId":"180","severity":1,"message":"196","line":4,"column":106,"nodeType":"182","messageId":"183","endLine":4,"endColumn":115},{"ruleId":"180","severity":1,"message":"193","line":4,"column":117,"nodeType":"182","messageId":"183","endLine":4,"endColumn":129},{"ruleId":"180","severity":1,"message":"197","line":4,"column":131,"nodeType":"182","messageId":"183","endLine":4,"endColumn":139},{"ruleId":"180","severity":1,"message":"198","line":4,"column":141,"nodeType":"182","messageId":"183","endLine":4,"endColumn":146},{"ruleId":"180","severity":1,"message":"199","line":4,"column":148,"nodeType":"182","messageId":"183","endLine":4,"endColumn":159},{"ruleId":"180","severity":1,"message":"200","line":4,"column":161,"nodeType":"182","messageId":"183","endLine":4,"endColumn":170},{"ruleId":"180","severity":1,"message":"194","line":4,"column":172,"nodeType":"182","messageId":"183","endLine":4,"endColumn":182},{"ruleId":"180","severity":1,"message":"190","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"191","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":2,"column":46,"nodeType":"182","messageId":"183","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":4,"column":82,"nodeType":"182","messageId":"183","endLine":4,"endColumn":94},{"ruleId":"180","severity":1,"message":"188","line":4,"column":95,"nodeType":"182","messageId":"183","endLine":4,"endColumn":98},{"ruleId":"180","severity":1,"message":"195","line":4,"column":100,"nodeType":"182","messageId":"183","endLine":4,"endColumn":104},{"ruleId":"180","severity":1,"message":"196","line":4,"column":106,"nodeType":"182","messageId":"183","endLine":4,"endColumn":115},{"ruleId":"180","severity":1,"message":"193","line":4,"column":117,"nodeType":"182","messageId":"183","endLine":4,"endColumn":129},{"ruleId":"180","severity":1,"message":"197","line":4,"column":131,"nodeType":"182","messageId":"183","endLine":4,"endColumn":139},{"ruleId":"180","severity":1,"message":"198","line":4,"column":141,"nodeType":"182","messageId":"183","endLine":4,"endColumn":146},{"ruleId":"180","severity":1,"message":"199","line":4,"column":148,"nodeType":"182","messageId":"183","endLine":4,"endColumn":159},{"ruleId":"180","severity":1,"message":"200","line":4,"column":161,"nodeType":"182","messageId":"183","endLine":4,"endColumn":170},{"ruleId":"180","severity":1,"message":"190","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"191","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":2,"column":46,"nodeType":"182","messageId":"183","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":4,"column":82,"nodeType":"182","messageId":"183","endLine":4,"endColumn":94},{"ruleId":"180","severity":1,"message":"193","line":4,"column":117,"nodeType":"182","messageId":"183","endLine":4,"endColumn":129},{"ruleId":"180","severity":1,"message":"190","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"191","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":2,"column":46,"nodeType":"182","messageId":"183","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":36},{"ruleId":"180","severity":1,"message":"201","line":4,"column":46,"nodeType":"182","messageId":"183","endLine":4,"endColumn":50},{"ruleId":"180","severity":1,"message":"202","line":4,"column":63,"nodeType":"182","messageId":"183","endLine":4,"endColumn":68},{"ruleId":"180","severity":1,"message":"203","line":4,"column":70,"nodeType":"182","messageId":"183","endLine":4,"endColumn":75},{"ruleId":"180","severity":1,"message":"187","line":4,"column":82,"nodeType":"182","messageId":"183","endLine":4,"endColumn":94},{"ruleId":"180","severity":1,"message":"196","line":4,"column":106,"nodeType":"182","messageId":"183","endLine":4,"endColumn":115},{"ruleId":"180","severity":1,"message":"193","line":4,"column":117,"nodeType":"182","messageId":"183","endLine":4,"endColumn":129},{"ruleId":"180","severity":1,"message":"198","line":4,"column":141,"nodeType":"182","messageId":"183","endLine":4,"endColumn":146},{"ruleId":"180","severity":1,"message":"199","line":4,"column":148,"nodeType":"182","messageId":"183","endLine":4,"endColumn":159},{"ruleId":"180","severity":1,"message":"200","line":4,"column":161,"nodeType":"182","messageId":"183","endLine":4,"endColumn":170},{"ruleId":"180","severity":1,"message":"190","line":2,"column":9,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"191","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":2,"column":24,"nodeType":"182","messageId":"183","endLine":2,"endColumn":32},{"ruleId":"180","severity":1,"message":"184","line":2,"column":34,"nodeType":"182","messageId":"183","endLine":2,"endColumn":44},{"ruleId":"180","severity":1,"message":"192","line":2,"column":46,"nodeType":"182","messageId":"183","endLine":2,"endColumn":59},{"ruleId":"180","severity":1,"message":"185","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":36},{"ruleId":"180","severity":1,"message":"187","line":4,"column":82,"nodeType":"182","messageId":"183","endLine":4,"endColumn":94},{"ruleId":"180","severity":1,"message":"196","line":4,"column":106,"nodeType":"182","messageId":"183","endLine":4,"endColumn":115},{"ruleId":"180","severity":1,"message":"193","line":4,"column":117,"nodeType":"182","messageId":"183","endLine":4,"endColumn":129},{"ruleId":"180","severity":1,"message":"194","line":4,"column":172,"nodeType":"182","messageId":"183","endLine":4,"endColumn":182},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'FormFeedback' is defined but never used.","'Row' is defined but never used.","'useForm' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","'CardSubtitle' is defined but never used.","'NavbarText' is defined but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]